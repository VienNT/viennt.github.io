{"version":3,"sources":["app/data/actionTypes/itemActionTypes.js","app/data/actions/itemActions.js","app/components/Button/Button.js","app/components/Collection/Item/Thumbnail/Thumbnail.js","app/components/Collection/Item/Item.js","app/utils/storage.js","app/components/Popup/Popup.js","app/components/FormControl/Input.js","app/components/FormControl/Textarea.js","app/components/Form/Form.js","app/components/Form/FormContainer.js","app/components/Collection/Collection.js","app/components/Collection/CollectionContainer.js","app/pages/CollectionPage/CollectionPage.js","app/pages/CollectionPage/CollectionPageContainer.js","app/pages/SearchPage/SearchPage.js","app/pages/SearchPage/SearchPageContainer.js","app/pages/EditPage/EditPage.js","app/pages/VideoPage/VideoPage.js","app/data/reducers/itemReducer.js","app/data/reducers/index.js","app/utils/nasaApi.js","app/data/epics/itemEpics.js","app/utils/common.js","app/data/epics/index.js","App.js","app/data/index.js","serviceWorker.js","index.js"],"names":["FETCH_ITEMS","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","FETCH_ITEMS_STORAGE","FETCH_ITEMS_STORAGE_SUCCESS","FETCH_ITEMS_STORAGE_FAILURE","RESET_ITEMS","SET_ACTIVE_ITEM","RESET_ACTIVE_ITEM","UPDATE_ITEM","UPDATE_ITEM_SUCCESS","UPDATE_ITEM_FAILURE","fetchItemsAction","queryString","type","itemActionTypes","payload","fetchItemsSuccessAction","items","totalResult","fetchItemsFailureAction","error","fetchItemsStorageAction","fetchItemsStorageSuccessAction","fetchItemsStorageFailureAction","resetItemsAction","setActiveItemAction","item","resetActiveItemAction","updateItemsAction","updateItemsSuccessAction","updateItemsFailureAction","Button","_this$props","this","props","bsPrefix","variant","active","size","className","block","innerRef","Object","objectWithoutProperties","classes","classNames","concat","react_default","a","createElement","assign","PureComponent","defaultProps","disabled","Thumbnail","nasaId","imageUrl","backgroundStyle","backgroundImage","backgroundColor","Link","to","style","index_es","icon","faPlay","Item","children","title","description","creator","dateCreated","Item_Thumbnail_Thumbnail","dist_default","format","Truncate","lines","ellipsis","collectionKey","Popup","onClosePopup","onClick","faTimes","Component","Input","Textarea","id","Form","unSelectItem","handleSubmit","addItemToNasaCollection","isUpdateForm","components_Popup_Popup","onSubmit","Field","name","component","rows","value","components_Button_Button","faCheck","newItem","message","reduxForm","form","validate","values","errors","trim","videoUrl","FormContainer","connect","state","initialValues","activeItem","dispatch","itemActions","collection","JSON","parse","localStorage","getItem","findIndex","newCollection","toConsumableArray","setItem","stringify","addItem","Collection","resetItems","isAddedToCollection","faHeartEmpty","faTrashAlt","faPen","selectItem","faPlus","_this","map","index","key","Collection_Item_Item","renderActionButtons","isSetActiveItem","renderItemList","Form_FormContainer","CollectionContainer","itemsList","CollectionPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","fetchItems","Collection_CollectionContainer","CollectionPageContainer","loading","SearchPage","call","event","_this2","setState","target","_this3","faAngleLeft","FormControl_Input","placeholder","onKeyPress","search","SearchPageContainer","EditPage","_ref","match","params","VideoPage","fetch","then","response","json","data","href","goBack","history","ReactPlayer_default","url","controls","width","height","INITIAL_STATE","combineReducers","formReducer","length","undefined","action","objectSpread","updatedItems","updatedItem","find","updatedData","encodeURI","links","metadata","parsedData","nasa_id","center","date_created","media_type","image","link","render","parseItem","combineEpics","action$","pipe","ofType","flatMap","from","total_hits","catchError","of","console","log","Promise","all","collections","split","video","endsWith","findMP4Url","findPNGUrl","itemEpics","store","initialState","epicMiddleware","createEpicMiddleware","reduxMiddleware","composeWithDevTools","applyMiddleware","createStore","allReducers","run","rootEpic","makeStore","App","es","BrowserRouter","Route","exact","path","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dcb60dd.chunk.js","sourcesContent":["export const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\n\nexport const FETCH_ITEMS_STORAGE = 'FETCH_ITEMS_STORAGE';\nexport const FETCH_ITEMS_STORAGE_SUCCESS = 'FETCH_ITEMS_STORAGE_SUCCESS';\nexport const FETCH_ITEMS_STORAGE_FAILURE = 'FETCH_ITEMS_STORAGE_FAILURE';\n\nexport const RESET_ITEMS = 'RESET_ITEMS';\n\nexport const SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM';\nexport const RESET_ACTIVE_ITEM = 'RESET_ACTIVE_ITEM';\n\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const UPDATE_ITEM_SUCCESS = 'UPDATE_ITEM_SUCCESS';\nexport const UPDATE_ITEM_FAILURE = 'UPDATE_ITEM_FAILURE';","import { itemActionTypes } from '../actionTypes';\n\n// Fetch Items\nexport const fetchItemsAction = (queryString) => ({\n  type: itemActionTypes.FETCH_ITEMS,\n  payload: queryString\n});\n\nexport const fetchItemsSuccessAction = (items, totalResult) => ({\n  type: itemActionTypes.FETCH_ITEMS_SUCCESS,\n  payload: {items, totalResult}\n});\n\nexport const fetchItemsFailureAction = error => ({\n  type: itemActionTypes.FETCH_ITEMS_FAILURE,\n  payload: error\n});\n\n// Fetch Items\nexport const fetchItemsStorageAction = () => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE\n});\n\nexport const fetchItemsStorageSuccessAction = items => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE_SUCCESS,\n  payload: {items}\n});\n\nexport const fetchItemsStorageFailureAction = error => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE_FAILURE,\n  payload: error\n});\n\n// Reset Items\nexport const resetItemsAction = () => ({\n  type: itemActionTypes.RESET_ITEMS\n});\n\n// Active Item\nexport const setActiveItemAction = (item) => ({\n  type: itemActionTypes.SET_ACTIVE_ITEM,\n  payload: item\n});\n\nexport const resetActiveItemAction = () => ({\n  type: itemActionTypes.RESET_ACTIVE_ITEM\n});\n\n// Update Item\nexport const updateItemsAction = items => ({\n  type: itemActionTypes.UPDATE_ITEM,\n  payload: items\n});\n\nexport const updateItemsSuccessAction = items => ({\n  type: itemActionTypes.UPDATE_ITEM_SUCCESS,\n  payload: items\n});\n\nexport const updateItemsFailureAction = error => ({\n  type: itemActionTypes.UPDATE_ITEM_FAILURE,\n  payload: error\n});\n  ","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nclass Button extends PureComponent {\n  static propTypes = {\n    bsPrefix: PropTypes.string,\n    variant: PropTypes.string,\n    active: PropTypes.bool,\n    block: PropTypes.bool,\n    disabled: PropTypes.bool,\n    type: PropTypes.oneOf(['button', 'reset', 'submit', null])\n  };\n\n  static defaultProps = {\n    bsPrefix: 'button',\n    variant: 'primary',\n    active: false,\n    disabled: false,\n    type: 'button'\n  };\n\n  render() {\n    const {\n      bsPrefix,\n      variant,\n      size,\n      active,\n      className,\n      block,\n      type,\n      innerRef,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      className,\n      bsPrefix,\n      active && 'active',\n      block && `${bsPrefix}--block`,\n      `${bsPrefix}--${variant}`\n    );\n\n    const Component = 'button';\n\n    return <Component {...props} type={type} className={classes} />;\n  }\n}\n\nexport default Button;","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n\nimport './Thumbnail.scss';\n\nclass Thumbnail extends PureComponent {\n  render() {\n    const { type, nasaId, imageUrl } = this.props;\n    let backgroundStyle = !!imageUrl\n      ? {backgroundImage: `url('${imageUrl}')`}\n      : {backgroundColor: '#000'}\n\n    if (type === 'video') {\n      return (\n        <Link to={`/video/${nasaId}`}>\n          <div className=\"thumbnail\" style={backgroundStyle}>\n            <div className=\"thumbnail__play\">\n              <FontAwesomeIcon icon={faPlay} />\n            </div>\n          </div>\n        </Link>\n      )\n    } else {\n      return (\n        <div className=\"thumbnail\" style={backgroundStyle}></div>\n      )\n    }\n  }\n}\n\nexport default Thumbnail;","import React, { PureComponent } from 'react';\nimport Truncate from 'react-truncate';\nimport Moment from 'react-moment';\n\nimport Thumbnail from './Thumbnail';\n\nimport './Item.scss';\n\nclass Item extends PureComponent {\n  render() {\n    const {\n      children,\n      title, description, creator, dateCreated,\n      nasaId, imageUrl, type\n    } = this.props;\n\n    return (\n      <div className=\"item\">\n        <Thumbnail nasaId={nasaId} imageUrl={imageUrl} type={type} />\n        <div className=\"item__sub-title text--xsmall color--dark-gray\">\n          <div className=\"item__sub-title__media-type\">{creator}</div>\n          <div className=\"item__sub-title__date-created\">\n            <Moment format=\"DD MMM, YYYY\">{dateCreated}</Moment>\n          </div>\n        </div>\n        <div className=\"item__title text--small\">{title}</div>\n        <div className=\"item__description text--xsmall text--justify color--dark-gray\">\n          <Truncate lines={3} ellipsis=\"...\">{description}</Truncate>\n        </div>\n        <div className=\"item__actions text--xsmall color--dark-gray\">\n          { children }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Item;","const collectionKey = 'NASACollection';\n\nfunction addItem(newItem) {\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n  if (!!collection) {\n    let existItemIndex = -1;\n    collection.findIndex(item => item.nasaId === newItem.nasaId);\n    if (existItemIndex > 0) {\n      collection[collection] = newItem;\n    } else {\n      const newCollection = [...collection, newItem];\n      localStorage.setItem(collectionKey, JSON.stringify(newCollection));\n    }\n  } else {\n    const newCollection = [newItem];\n    localStorage.setItem(collectionKey, JSON.stringify(newCollection));\n  }\n}\n\nfunction getItem(nasaId) {\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n  if (!!collection) {\n    let existItem = collection.findIndex(item => item.nasaId === nasaId);\n    return existItem;\n  }\n  return null;\n}\n\nfunction getItems() {\n  return JSON.parse(localStorage.getItem(collectionKey));\n}\n\nexport {\n  addItem,\n  getItem,\n  getItems\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './Popup.scss';\n\nclass Popup extends Component {\n\n  render() {\n    const { children, onClosePopup } = this.props;\n\n    return (\n      <div className=\"popup\">\n        <div className=\"popup__overlay\"></div>\n        <div className=\"popup__container\">\n          <div className=\"popup__body\">\n            <div className=\"popup__body__close\"\n              onClick={onClosePopup}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    bsPrefix: 'input'\n  };\n\n  render() {\n    const {\n      bsPrefix,\n      className,\n      size,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      bsPrefix,\n      className,\n      'form-control',\n      size && `form-control--${size}`\n    );\n\n    const Component = 'input';\n\n    return (\n      <Component\n        {...props}\n        className={classes}\n      />\n    );\n  }\n}\n\nexport default Input;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Textarea extends PureComponent {\n  static propTypes = {\n    bsPrefix: PropTypes.string,\n    value: PropTypes.string,\n    onKeyPress: PropTypes.func,\n    size: PropTypes.string,\n    id: PropTypes.string\n  };\n\n  static defaultProps = {\n    bsPrefix: 'textarea'\n  };\n\n  render() {\n    const {\n      id,\n      bsPrefix,\n      className,\n      size,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      bsPrefix,\n      className,\n      'form-control',\n      size && `form-control--${size}`\n    );\n\n    const Component = 'textarea';\n\n    return (\n      <Component\n        {...props}\n        id={id}\n        className={classes}\n      />\n    );\n  }\n}\n\nexport default Textarea;","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../Button';\nimport Popup from '../Popup';\nimport { Input, Textarea } from '../FormControl';\n\nimport './Form.scss';\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.type || values.type.trim() === '') {\n    errors.type = 'Required';\n  }\n  if (!values.imageUrl || values.imageUrl.trim() === '') {\n    errors.imageUrl = 'Required';\n  }\n  if (!values.videoUrl || values.videoUrl.trim() === '') {\n    errors.videoUrl = 'Required';\n  }\n\n  return errors;\n}\n\nclass Form extends Component {\n  static renderError(newItem) {\n    if (newItem && newItem.error && newItem.error.message) {\n      return (\n        <div className=\"alert alert-danger\">\n          {newItem ? newItem.error.message : ''}\n        </div>\n      );\n    }\n    return <span />;\n  }\n\n  render() {\n    const {\n      unSelectItem,\n      handleSubmit,\n      isUpdateForm,\n      addItemToNasaCollection\n    } = this.props;\n\n    return (\n      <Popup onClosePopup={() => unSelectItem()}>\n        <div className=\"form\">\n          <div className=\"form__header\">\n            <div className=\"form__header__title\">\n              Add to Collection\n            </div>\n          </div>\n          <form\n            onSubmit={handleSubmit(addItemToNasaCollection)}\n            className=\"form__body\"\n          >\n            <Field\n              id=\"itemFormTitle\"\n              name=\"title\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormDescription\"\n              name=\"description\"\n              size=\"small\"\n              component=\"textarea\"\n              rows=\"8\"\n              className=\"textarea form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormType\"\n              name=\"type\"\n              size=\"small\"\n              component=\"select\"\n              className=\"select form-control form-control--small\"\n            >\n              <option value=\"video\">Video</option>\n              <option value=\"image\">Image</option>\n            </Field>\n            <Field\n              id=\"itemFormImage\"\n              name=\"imageUrl\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormVideo\"\n              name=\"videoUrl\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Button type=\"submit\">\n              <FontAwesomeIcon icon={faCheck} /> Add to collection\n            </Button>\n          </form>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'Form',\n  validate\n})(Form);\n","import { connect } from 'react-redux';\n\nimport { itemActions } from '../../data/actions';\nimport { addItem } from '../../utils/storage';\n\nimport Form from './Form';\n\nconst mapStateToProps = state => ({\n  initialValues: state.item.activeItem.item\n});\n\nconst mapDispatchToProps = dispatch => ({\n  unSelectItem: () => {\n    dispatch(itemActions.resetActiveItemAction());\n  },\n  addItemToNasaCollection: (value) => {\n    addItem(value);\n  }\n});\n\nconst FormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\nexport default FormContainer;","import React, { PureComponent } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrashAlt, faPen, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as faHeartEmpty } from '@fortawesome/free-regular-svg-icons';\n\nimport Button from '../Button';\nimport Item from './Item';\nimport Form from '../Form';\n\nimport './Collection.scss';\n\nclass Collection extends PureComponent {\n\n  componentWillUnmount() {\n    this.props.resetItems();\n  }\n\n  renderActionButtons(item) {\n    const { isAddedToCollection } = this.props;\n    if (isAddedToCollection) {\n      return (\n        <div>\n          <Button className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={faHeartEmpty} /> <span className=\"color--gray\"></span>\n          </Button> <Button className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={faTrashAlt} /> <span className=\"color--gray\"></span>\n          </Button> <Button className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={faPen} /> <span className=\"color--gray\"></span>\n          </Button>\n        </div>\n      )\n    } else {\n      const { selectItem } = this.props;\n      return (\n        <div>\n            <Button onClick={() => selectItem(item)} className=\"text--small\" variant=\"default\" block>\n              <FontAwesomeIcon icon={faPlus} /> <span className=\"color--gray\">Add to NASA collection</span>\n            </Button>\n        </div>\n      )\n    }\n  }\n\n  renderItemList(items) {\n    return items.map((item, index) => {\n      return (\n        <div className=\"collection__item\" key={index}>\n          <Item\n            title={item.title}\n            description={item.description}\n            creator={item.creator}\n            dateCreated={item.dateCreated}\n            nasaId={item.nasaId}\n            imageUrl={item.imageUrl}\n            type={item.type}>\n            {this.renderActionButtons(item)}\n          </Item>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    const { items, isSetActiveItem } = this.props;\n\n    return (\n      <div className=\"collection\">\n        {items ? this.renderItemList(items) : ''}\n        {isSetActiveItem ? <Form/> : ''}\n      </div>\n    );\n  }\n}\n\nexport default Collection;","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\n\nimport Collection from './Collection';\n\nconst mapStateToProps = state => ({\n  isSetActiveItem: !!state.item.activeItem.item,\n  items: state.item.itemsList.items\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectItem: (item) => {\n    dispatch(itemActions.setActiveItemAction(item));\n  },\n  resetItems: () => {\n    dispatch(itemActions.resetItemsAction());\n  }\n});\n\nconst CollectionContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Collection);\n\nexport default CollectionContainer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../../components/Button';\nimport CollectionContainer from '../../components/Collection';\n\nimport './CollectionPage.scss';\n\nexport class CollectionPage extends Component {\n  componentWillMount() {\n    this.props.fetchItems();\n  }\n\n  render() {\n    return (\n      <div className=\"collection-page\">\n        <div className=\"collection-page__header\">\n          <div className=\"collection-page__header__title\">\n            <label>NASA Collection</label>\n          </div>\n          <div className=\"collection-page__header__actions\">\n            <Link to=\"/nasa-search\">\n              <Button>\n                <FontAwesomeIcon icon={faPlus} /> Add new item\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"collection-page__body\">\n          <CollectionContainer isAddedToCollection={true} />\n        </div>\n      </div>\n    )\n  }\n};","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\n\nimport { CollectionPage } from './CollectionPage';\n\nconst mapStateToProps = state => ({\n  totalResult: state.item.itemsList.totalResult,\n  loading: state.item.itemsList.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: () => {\n    dispatch(itemActions.fetchItemsStorageAction());\n  }\n});\n\nconst CollectionPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CollectionPage);\n\nexport default CollectionPageContainer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport CollectionContainer from '../../components/Collection';\nimport { Input } from '../../components/FormControl';\n\nimport './SearchPage.scss';\n\nexport class SearchPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      queryString: null,\n    };\n  }\n\n  search(event) {\n    if (event.key === 'Enter') {\n      this.setState({queryString: event.target.value}, () => {\n        this.props.fetchItems(this.state.queryString);\n      });\n    }\n  }\n\n  render() {\n    const { queryString } = this.state;\n    const { totalResult, loading } = this.props;\n\n    return (\n      <div className=\"search-page\">\n        <div className=\"search-page__header\">\n          <div className=\"search-page__header__actions\">\n            <Link to=\"/\" className=\"text--small\">\n              <FontAwesomeIcon icon={faAngleLeft} /> Back to Collection\n            </Link>\n          </div>\n          <div className=\"search-page__header__title\">\n            <label>Search from Nasa</label>\n          </div>\n          <div className=\"search-page__header__input\">\n            <Input\n              type=\"text\"\n              placeholder=\"Type something then Enter to search...\"\n              onKeyPress={(event) => this.search(event)}\n            />\n          </div>\n        </div>\n        <div className=\"search-page__body\">\n          <div className=\"search-page__body__total-hits\">\n            {\n              totalResult !== null ? (\n                <span>{ totalResult } result for \"{ queryString }\"</span>\n              ) : ''\n            }\n            {\n              loading ? (\n                <span>loading...</span>\n              ) : ''\n            }\n          </div>\n          <CollectionContainer isAddedToCollection={false} />\n        </div>\n      </div>\n    )\n  }\n};","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\n\nimport { SearchPage } from './SearchPage';\n\nconst mapStateToProps = state => ({\n  totalResult: state.item.itemsList.totalResult,\n  loading: state.item.itemsList.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: (queryString) => {\n    dispatch(itemActions.fetchItemsAction(queryString));\n  }\n});\n\nconst SearchPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchPage);\n\nexport default SearchPageContainer;","import React, { Component } from 'react';\n\nexport const EditPage = ({ match }) => <h2>{match.params.nasaId}</h2>;","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './VideoPage.scss';\n\nexport class VideoPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoUrl: null\n    };\n\n    const { nasaId } = props.match.params;\n    fetch(`https://images-api.nasa.gov/asset/${nasaId}`)\n      .then(response => response.json())\n      .then(data => this.setState({videoUrl: data.collection.items[0].href}));\n  }\n\n  render() {\n    const { videoUrl } = this.state;\n    const { goBack } = this.props.history;\n\n    return (\n      <div className=\"video-page\">\n        <div className=\"video-page__header\">\n          <div className=\"video-page__header__title\">\n            <label>NASA video</label>\n          </div>\n          <div className=\"video-page__header__actions\">\n          <span onClick={goBack} className=\"color--white\">\n            <FontAwesomeIcon icon={faTimes} />\n          </span>\n          </div>\n        </div>\n        <div className=\"video-page__body\">\n          <ReactPlayer\n              url={videoUrl}\n              controls\n              width=\"100%\" height=\"100%\"\n              />\n        </div>\n      </div>\n    )\n  }\n};","import { itemActionTypes } from '../actionTypes';\n\nconst INITIAL_STATE = {\n  itemsList: { items: [], totalResult: null, error: null, loading: false },\n  activeItem: { item: null },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  let error;\n  switch (action.type) {\n    case itemActionTypes.FETCH_ITEMS:\n    case itemActionTypes.FETCH_ITEMS_STORAGE:\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error: null, loading: true }\n      };\n    case itemActionTypes.FETCH_ITEMS_SUCCESS:\n    case itemActionTypes.FETCH_ITEMS_STORAGE_SUCCESS:\n      return {\n        ...state,\n        itemsList: { ...action.payload, error: null, loading: false }\n      };\n    case itemActionTypes.FETCH_ITEMS_FAILURE:\n    case itemActionTypes.FETCH_ITEMS_STORAGE_FAILURE:\n      error = action.payload || { message: action.payload.message };\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error, loading: false }\n      };\n    case itemActionTypes.RESET_ITEMS:\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error: null, loading: false }\n      };\n\n    case itemActionTypes.SET_ACTIVE_ITEM:\n      return {\n        ...state,\n        activeItem: { item: action.payload }\n      };\n    case itemActionTypes.RESET_ACTIVE_ITEM:\n      return {\n        ...state,\n        activeItem: { item: null }\n      };\n\n    case itemActionTypes.UPDATE_ITEM_SUCCESS:\n      const updatedItems = !!state.itemsList.items && state.itemsList.items\n        .map(item => {\n          const updatedItem = action.payload.find(\n            updatedData => encodeURI(item.nasaId) === updatedData.nasaId\n          );\n          if (!!updatedItem) {\n            return { ...item, ...updatedItem, nasaId: item.nasaId }\n          }\n          return item\n        });\n      return {\n        ...state,\n        itemsList: {\n          ...state.itemsList,\n          items: updatedItems\n        }\n      };\n\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n  form: formReducer,\n  item: itemReducer,\n});\n","function parseItem(item) {\n  let parsedData;\n  if (item.data && item.data.length) {\n    parsedData = {\n      nasaId: item.data[0].nasa_id,\n      title: item.data[0].title,\n      description: item.data[0].description,\n      creator: item.data[0].center,\n      dateCreated: item.data[0].date_created,\n      type: item.data[0].media_type,\n    };\n  } else {\n    parsedData = {\n      nasaId: null,\n      title: null,\n      description: null,\n      creator: null,\n      dateCreated: null,\n      imageUrl: null,\n      type: null,\n    }\n  }\n\n  let imageUrl;\n  if (item.links && item.links.length && parsedData.type === 'image') {\n    let image = item.links\n      .find(link => link.render === 'image');\n    imageUrl = !!image ? image.href : null;\n  }\n\n  return {\n    ...parsedData,\n    imageUrl\n  };\n}\n\nfunction search(queryString) {\n  return fetch(`https://images-api.nasa.gov/search?q=${queryString}&media_type=video`)\n    .then(response => response.json())\n    .then(response => {\n      return {\n        links: response.collection.links,\n        metadata: response.collection.metadata,\n        items: response.collection.items.map(item => parseItem(item)),\n      };\n    });\n}\n\nfunction getAssets(nasaId) {\n  return fetch(`https://images-api.nasa.gov/asset/${nasaId}`)\n    .then(response => response.json());\n}\n\nexport {\n  search,\n  getAssets\n};","import { combineEpics, ofType } from 'redux-observable';\nimport { of, from } from 'rxjs';\nimport { map, flatMap, catchError } from 'rxjs/operators';\n\nimport { itemActionTypes } from '../actionTypes';\nimport { itemActions } from '../actions';\n\nimport { search, getAssets } from '../../utils/nasaApi';\nimport { findMP4Url, findPNGUrl } from '../../utils/common';\nimport { getItems } from '../../utils/storage';\n\nconst fetchItemsEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS),\n  flatMap(action => from(search(action.payload)).pipe(\n    map((collection) => {\n      let items = collection.items;\n      let totalResult = collection.metadata.total_hits;\n      return itemActions.fetchItemsSuccessAction(items, totalResult);\n    }),\n    catchError(error => of(itemActions.fetchItemsFailureAction(error)))\n  ))\n);\n\nconst fetchItemsStorageEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS_STORAGE),\n  flatMap(() => of(getItems()).pipe(\n    map((items) => {\n      console.log(items);\n      return itemActions.fetchItemsStorageSuccessAction(items);\n    }),\n    catchError(error => of(itemActions.fetchItemsStorageFailureAction(error)))\n  ))\n);\n\nconst getItemAssetsEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS_SUCCESS),\n  flatMap(action => from(Promise.all(action.payload.items.map(item => getAssets(item.nasaId)))).pipe(\n    map((collections) => {\n      let updatedItems = collections.map(collection => ({\n        nasaId: collection.collection && collection.collection.href.split('https://images-api.nasa.gov/asset/')[1] || null,\n        videoUrl: collection.collection && findMP4Url(collection.collection.items),\n        imageUrl: collection.collection && findPNGUrl(collection.collection.items) || 'https://dumielauxepices.net/sites/default/files/black-860221-5629409.jpg'\n      }))\n      return itemActions.updateItemsAction(updatedItems);\n    }),\n    catchError(error => of(itemActions.updateItemsFailureAction(error)))\n  ))\n);\n\nconst updateItemsEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.UPDATE_ITEM),\n  flatMap(action => {\n    if (true) { // Check if need to update storage\n      return of(itemActions.updateItemsSuccessAction(action.payload));\n    } else {\n      return from(search(action.payload)).pipe(\n        map((item) => {\n          return itemActions.updateItemsSuccessAction(item);\n        }),\n        catchError(error => of(itemActions.updateItemsFailureAction(error)))\n      );\n    }\n  })\n);\n\nexport default combineEpics(\n  fetchItemsEpic,\n  fetchItemsStorageEpic,\n  getItemAssetsEpic,\n  updateItemsEpic\n);","function findPNGUrl(items) {\n  let image = items.find(item => item.href.endsWith('~small_thumb_00003.png'))\n  return !!image ? image.href : null;\n}\n\nfunction findMP4Url(items) {\n  let video = items.find(item => item.href.endsWith('~small.mp4'))\n  return !!video ? video.href : null;\n}\n\nexport {\n  findPNGUrl,\n  findMP4Url\n};","import { combineEpics } from 'redux-observable';\n\nimport itemEpics from './itemEpics';\n\nexport default combineEpics(\n  itemEpics\n);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { CollectionPage, SearchPage, EditPage, VideoPage } from './app/pages';\nimport makeStore from './app/data';\n\nimport './app/styles/style.scss';\n\nconst store = makeStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={CollectionPage} />\n            <Route path=\"/nasa-search\" component={SearchPage} />\n            <Route path=\"/video/:nasaId\" component={VideoPage} />\n              <Route path=\"/edit/:nasaId\" component={EditPage} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport allReducers from './reducers';\nimport rootEpic from './epics';\n\nexport default function configureStore(initialState) {\n  const epicMiddleware = createEpicMiddleware();\n  const reduxMiddleware = composeWithDevTools(\n    applyMiddleware(epicMiddleware)\n  );\n\n  const store = createStore(allReducers, initialState, reduxMiddleware);\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint operator-linebreak: [\"error\", \"after\"] */\n/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint no-console: [\"error\", { allow: [\"log\", \"error\"] }] */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}