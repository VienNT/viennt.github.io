{"version":3,"sources":["app/data/actionTypes/itemActionTypes.js","app/data/actions/itemActions.js","app/components/Button/Button.js","app/utils/storage.js","app/components/Collection/Item/Thumbnail/Thumbnail.js","app/components/Collection/Item/Item.js","app/components/Popup/Popup.js","app/components/Form/Form.js","app/components/Form/FormContainer.js","app/components/Collection/Collection.js","app/components/Collection/CollectionContainer.js","app/pages/CollectionPage/CollectionPage.js","app/pages/CollectionPage/CollectionPageContainer.js","app/components/FormControl/Input.js","app/components/FormControl/Textarea.js","app/pages/SearchPage/SearchPage.js","app/pages/SearchPage/SearchPageContainer.js","app/pages/EditPage/EditPage.js","app/pages/VideoPage/VideoPage.js","app/data/reducers/itemReducer.js","app/data/reducers/index.js","app/utils/nasaApi.js","app/data/epics/itemEpics.js","app/utils/common.js","app/data/epics/index.js","App.js","app/data/index.js","serviceWorker.js","index.js"],"names":["FETCH_ITEMS","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","FETCH_ITEMS_STORAGE","FETCH_ITEMS_STORAGE_SUCCESS","FETCH_ITEMS_STORAGE_FAILURE","RESET_ITEMS","SET_ACTIVE_ITEM","RESET_ACTIVE_ITEM","UPDATE_ITEMS","UPDATE_SINGLE_ITEM","DELETE_SINGLE_ITEM","fetchItemsAction","queryString","type","itemActionTypes","payload","fetchItemsSuccessAction","items","totalResult","fetchItemsFailureAction","error","fetchItemsStorageAction","fetchItemsStorageSuccessAction","length","fetchItemsStorageFailureAction","resetItemsAction","setActiveItemAction","item","resetActiveItemAction","updateItemsAction","updateSingleItemAction","deleteSingleItemAction","nasaId","Button","_this$props","this","props","bsPrefix","variant","active","size","className","block","innerRef","Object","objectWithoutProperties","classes","classNames","concat","react_default","a","createElement","assign","PureComponent","defaultProps","disabled","collectionKey","updateItem","collection","JSON","parse","localStorage","getItem","existItemIndex","findIndex","setItem","stringify","Thumbnail","imageUrl","backgroundStyle","backgroundImage","backgroundColor","Link","to","style","index_es","icon","faPlay","Item","children","title","description","creator","dateCreated","Item_Thumbnail_Thumbnail","dist_default","format","Truncate","lines","ellipsis","Popup","onClosePopup","onClick","faTimes","Component","Form","unSelectItem","_this","handleSubmit","addItemToNasaCollection","isAddedToCollection","components_Popup_Popup","closePopup","onSubmit","Field","id","name","component","rows","value","components_Button_Button","faCheck","newItem","message","reduxForm","form","validate","values","errors","trim","videoUrl","FormContainer","connect","state","initialValues","activeItem","dispatch","itemActions","newCollection","toConsumableArray","addItem","Collection","objectSpread","isFavorite","deleteItem","selectItem","addToFavorite","color","faHeart","faHeartEmpty","faTrashAlt","faPen","faPlus","_this2","map","index","key","Collection_Item_Item","renderActionButtons","_this$props2","isSetActiveItem","renderItemList","Form_FormContainer","CollectionContainer","itemsList","confirm","splice","CollectionPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","fetchItems","resetItems","loading","Collection_CollectionContainer","CollectionPageContainer","Input","Textarea","SearchPage","call","event","setState","target","_this3","faAngleLeft","FormControl_Input","placeholder","onKeyPress","search","SearchPageContainer","EditPage","_ref","match","params","VideoPage","fetch","then","response","json","data","href","goBack","history","ReactPlayer_default","url","controls","width","height","INITIAL_STATE","combineReducers","formReducer","undefined","action","updatedItem","find","updatedData","encodeURI","filter","links","metadata","parsedData","nasa_id","center","date_created","media_type","image","link","render","parseItem","combineEpics","action$","pipe","ofType","flatMap","from","total_hits","catchError","of","Promise","all","collections","updatedItems","split","video","endsWith","findMP4Url","findPNGUrl","updateItemsFailureAction","itemEpics","store","initialState","epicMiddleware","createEpicMiddleware","reduxMiddleware","composeWithDevTools","applyMiddleware","createStore","allReducers","run","rootEpic","makeStore","App","es","BrowserRouter","Route","exact","path","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf60dedd.chunk.js","sourcesContent":["export const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\n\nexport const FETCH_ITEMS_STORAGE = 'FETCH_ITEMS_STORAGE';\nexport const FETCH_ITEMS_STORAGE_SUCCESS = 'FETCH_ITEMS_STORAGE_SUCCESS';\nexport const FETCH_ITEMS_STORAGE_FAILURE = 'FETCH_ITEMS_STORAGE_FAILURE';\n\nexport const RESET_ITEMS = 'RESET_ITEMS';\n\nexport const SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM';\nexport const RESET_ACTIVE_ITEM = 'RESET_ACTIVE_ITEM';\n\nexport const UPDATE_ITEMS = 'UPDATE_ITEMS';\nexport const UPDATE_SINGLE_ITEM = 'UPDATE_SINGLE_ITEM';\nexport const DELETE_SINGLE_ITEM = 'DELETE_SINGLE_ITEM';","import { itemActionTypes } from '../actionTypes';\n\n// Fetch Items\nexport const fetchItemsAction = (queryString) => ({\n  type: itemActionTypes.FETCH_ITEMS,\n  payload: queryString\n});\n\nexport const fetchItemsSuccessAction = (items, totalResult) => ({\n  type: itemActionTypes.FETCH_ITEMS_SUCCESS,\n  payload: {items, totalResult}\n});\n\nexport const fetchItemsFailureAction = error => ({\n  type: itemActionTypes.FETCH_ITEMS_FAILURE,\n  payload: error\n});\n\n// Fetch Items\nexport const fetchItemsStorageAction = () => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE\n});\n\nexport const fetchItemsStorageSuccessAction = items => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE_SUCCESS,\n  payload: {items, totalResult: items.length}\n});\n\nexport const fetchItemsStorageFailureAction = error => ({\n  type: itemActionTypes.FETCH_ITEMS_STORAGE_FAILURE,\n  payload: error\n});\n\n// Reset Items\nexport const resetItemsAction = () => ({\n  type: itemActionTypes.RESET_ITEMS\n});\n\n// Active Item\nexport const setActiveItemAction = (item) => ({\n  type: itemActionTypes.SET_ACTIVE_ITEM,\n  payload: item\n});\n\nexport const resetActiveItemAction = () => ({\n  type: itemActionTypes.RESET_ACTIVE_ITEM\n});\n\n// Update Items\nexport const updateItemsAction = items => ({\n  type: itemActionTypes.UPDATE_ITEMS,\n  payload: items\n});\n\n// Update Single Item\nexport const updateSingleItemAction = item => ({\n  type: itemActionTypes.UPDATE_SINGLE_ITEM,\n  payload: item\n});\n\n// Delete Single Item\nexport const deleteSingleItemAction = nasaId => ({\n  type: itemActionTypes.DELETE_SINGLE_ITEM,\n  payload: nasaId\n});\n  ","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nclass Button extends PureComponent {\n  static propTypes = {\n    bsPrefix: PropTypes.string,\n    variant: PropTypes.string,\n    active: PropTypes.bool,\n    block: PropTypes.bool,\n    disabled: PropTypes.bool,\n    type: PropTypes.oneOf(['button', 'reset', 'submit', null])\n  };\n\n  static defaultProps = {\n    bsPrefix: 'button',\n    variant: 'primary',\n    active: false,\n    disabled: false,\n    type: 'button'\n  };\n\n  render() {\n    const {\n      bsPrefix,\n      variant,\n      size,\n      active,\n      className,\n      block,\n      type,\n      innerRef,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      className,\n      bsPrefix,\n      active && 'active',\n      block && `${bsPrefix}--block`,\n      `${bsPrefix}--${variant}`\n    );\n\n    const Component = 'button';\n\n    return <Component {...props} type={type} className={classes} />;\n  }\n}\n\nexport default Button;","/* eslint no-restricted-globals: [\"error\", \"event\"] */\n\nconst collectionKey = 'NASACollection';\n\nfunction addItem(newItem) {\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n  if (!!collection) {\n    let existItemIndex = collection.findIndex(item => item.nasaId === newItem.nasaId);\n    if (existItemIndex >= 0) {\n      collection[existItemIndex] = newItem;\n      localStorage.setItem(collectionKey, JSON.stringify(collection));\n    } else {\n      const newCollection = [...collection, newItem];\n      localStorage.setItem(collectionKey, JSON.stringify(newCollection));\n    }\n  } else {\n    const newCollection = [newItem];\n    localStorage.setItem(collectionKey, JSON.stringify(newCollection));\n  }\n}\n\nfunction updateItem(updateItem) {\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n  if (!!collection) {\n    let existItemIndex = collection.findIndex(item => item.nasaId === updateItem.nasaId);\n    if (existItemIndex >= 0) {\n      collection[existItemIndex] = updateItem;\n      localStorage.setItem(collectionKey, JSON.stringify(collection));\n    }\n  }\n}\n\nfunction getItem(nasaId) {\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n  if (!!collection) {\n    let existItem = collection.find(item => item.nasaId === nasaId);\n    return existItem;\n  }\n  return null;\n}\n\nfunction getItems() {\n  return JSON.parse(localStorage.getItem(collectionKey));\n}\n \nfunction deleteItem(nasaId) {\n  var result = confirm('Are you sure?');\n  if (!result) return;\n  let collection = JSON.parse(localStorage.getItem(collectionKey));\n\n  if (!collection) return;\n  let existItemIndex = collection.findIndex(item => item.nasaId === nasaId);\n\n  if (existItemIndex < 0) return;\n  collection.splice(existItemIndex, 1);\n  localStorage.setItem(collectionKey, JSON.stringify(collection));\n}\n\nexport {\n  addItem,\n  updateItem,\n  getItem,\n  getItems,\n  deleteItem\n}","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n\nimport './Thumbnail.scss';\n\nclass Thumbnail extends PureComponent {\n  render() {\n    const { type, nasaId, imageUrl } = this.props;\n    let backgroundStyle = !!imageUrl\n      ? {backgroundImage: `url('${imageUrl}')`}\n      : {backgroundColor: '#000'}\n\n    if (type === 'video') {\n      return (\n        <Link to={`/video/${nasaId}`}>\n          <div className=\"thumbnail\" style={backgroundStyle}>\n            <div className=\"thumbnail__play\">\n              <FontAwesomeIcon icon={faPlay} />\n            </div>\n          </div>\n        </Link>\n      )\n    } else {\n      return (\n        <div className=\"thumbnail\" style={backgroundStyle}></div>\n      )\n    }\n  }\n}\n\nexport default Thumbnail;","import React, { PureComponent } from 'react';\nimport Truncate from 'react-truncate';\nimport Moment from 'react-moment';\n\nimport Thumbnail from './Thumbnail';\n\nimport './Item.scss';\n\nclass Item extends PureComponent {\n  render() {\n    const {\n      children,\n      title, description, creator, dateCreated,\n      nasaId, imageUrl, type\n    } = this.props;\n\n    return (\n      <div className=\"item\">\n        <Thumbnail nasaId={nasaId} imageUrl={imageUrl} type={type} />\n        <div className=\"item__sub-title text--xsmall color--dark-gray\">\n          <div className=\"item__sub-title__media-type\">{creator}</div>\n          <div className=\"item__sub-title__date-created\">\n            <Moment format=\"DD MMM, YYYY\">{dateCreated}</Moment>\n          </div>\n        </div>\n        <div className=\"item__title text--small\">{title}</div>\n        <div className=\"item__description text--xsmall text--justify color--dark-gray\">\n          <Truncate lines={3} ellipsis=\"...\">{description}</Truncate>\n        </div>\n        <div className=\"item__actions text--xsmall color--dark-gray\">\n          { children }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Item;","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './Popup.scss';\n\nclass Popup extends Component {\n\n  render() {\n    const { children, onClosePopup } = this.props;\n\n    return (\n      <div className=\"popup\">\n        <div className=\"popup__overlay\"></div>\n        <div className=\"popup__container\">\n          <div className=\"popup__body\">\n            <div className=\"popup__body__close\"\n              onClick={onClosePopup}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../Button';\nimport Popup from '../Popup';\n\nimport './Form.scss';\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.type || values.type.trim() === '') {\n    errors.type = 'Required';\n  }\n  if (!values.imageUrl || values.imageUrl.trim() === '') {\n    errors.imageUrl = 'Required';\n  }\n  if (!values.videoUrl || values.videoUrl.trim() === '') {\n    errors.videoUrl = 'Required';\n  }\n\n  return errors;\n}\n\nclass Form extends Component {\n  static renderError(newItem) {\n    if (newItem && newItem.error && newItem.error.message) {\n      return (\n        <div className=\"alert alert-danger\">\n          {newItem ? newItem.error.message : ''}\n        </div>\n      );\n    }\n    return <span />;\n  }\n\n  closePopup() {\n    this.props.unSelectItem();\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      updateItem,\n      addItemToNasaCollection,\n      isAddedToCollection\n    } = this.props;\n\n    return (\n      <Popup onClosePopup={() => this.closePopup()}>\n        <div className=\"form\">\n          <div className=\"form__header\">\n            <div className=\"form__header__title\">\n              {isAddedToCollection ? 'Edit' : 'Add to collection'}\n            </div>\n          </div>\n          <form\n            onSubmit={handleSubmit(isAddedToCollection ? updateItem : addItemToNasaCollection)}\n            className=\"form__body\"\n          >\n            <Field\n              id=\"itemFormTitle\"\n              name=\"title\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormDescription\"\n              name=\"description\"\n              size=\"small\"\n              component=\"textarea\"\n              rows=\"8\"\n              className=\"textarea form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormType\"\n              name=\"type\"\n              size=\"small\"\n              component=\"select\"\n              className=\"select form-control form-control--small\"\n            >\n              <option value=\"video\">Video</option>\n              <option value=\"image\">Image</option>\n            </Field>\n            <Field\n              id=\"itemFormImage\"\n              name=\"imageUrl\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Field\n              id=\"itemFormVideo\"\n              name=\"videoUrl\"\n              type=\"text\"\n              size=\"small\"\n              component=\"input\"\n              className=\"input form-control form-control--small\"\n            />\n            <Button type=\"submit\">\n              <FontAwesomeIcon icon={faCheck} />&nbsp;\n              {isAddedToCollection ? 'Save' : 'Add to collection'}\n            </Button>\n          </form>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'Form',\n  validate\n})(Form);\n","import { connect } from 'react-redux';\n\nimport { itemActions } from '../../data/actions';\nimport { addItem, updateItem } from '../../utils/storage';\n\nimport Form from './Form';\n\nconst mapStateToProps = state => ({\n  initialValues: state.item.activeItem.item\n});\n\nconst mapDispatchToProps = dispatch => ({\n  unSelectItem: () => {\n    dispatch(itemActions.resetActiveItemAction());\n  },\n  addItemToNasaCollection: (value) => {\n    addItem(value);\n  },\n  updateItem: (value) => {\n    updateItem(value);\n    dispatch(itemActions.updateSingleItemAction(value));\n  }\n});\n\nconst FormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\nexport default FormContainer;","import React, { PureComponent } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrashAlt, faPen, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as faHeartEmpty } from '@fortawesome/free-regular-svg-icons';\n\nimport Button from '../Button';\nimport Item from './Item';\nimport Form from '../Form';\n\nimport './Collection.scss';\n\nclass Collection extends PureComponent {\n\n  addToFavorite(item) {\n    this.props.updateItem({\n      ...item,\n      isFavorite: !item.isFavorite,\n    })\n  }\n\n  deleteItem(item) {\n    this.props.deleteItem(item)\n  }\n\n  renderActionButtons(item) {\n    const { isAddedToCollection, selectItem } = this.props;\n    if (isAddedToCollection) {\n      return (\n        <div>\n          <Button\n            onClick={() => this.addToFavorite(item)}\n            style={{color: item.isFavorite ? 'red' : 'initial'}}\n            className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={item.isFavorite ? faHeart : faHeartEmpty} /> <span className=\"color--gray\"></span>\n          </Button>&nbsp;\n\n          <Button\n            onClick={() => this.deleteItem(item)}\n            className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={faTrashAlt} /> <span className=\"color--gray\"></span>\n          </Button>&nbsp;\n\n          <Button \n            onClick={() => selectItem(item)}\n            className=\"text--small\" variant=\"default\">\n            <FontAwesomeIcon icon={faPen} /> <span className=\"color--gray\"></span>\n          </Button>\n        </div>\n      )\n    } else {\n      const { selectItem } = this.props;\n      return (\n        <div>\n            <Button onClick={() => selectItem(item)} className=\"text--small\" variant=\"default\" block>\n              <FontAwesomeIcon icon={faPlus} /> <span className=\"color--gray\">Add to NASA collection</span>\n            </Button>\n        </div>\n      )\n    }\n  }\n\n  renderItemList(items) {\n    return items.map((item, index) => {\n      return (\n        <div className=\"collection__item\" key={index}>\n          <Item\n            title={item.title}\n            description={item.description}\n            creator={item.creator}\n            dateCreated={item.dateCreated}\n            nasaId={item.nasaId}\n            imageUrl={item.imageUrl}\n            type={item.type}>\n            {this.renderActionButtons(item)}\n          </Item>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    const { items, isSetActiveItem, isAddedToCollection } = this.props;\n\n    return (\n      <div className=\"collection\">\n        {items ? this.renderItemList(items) : ''}\n        {isSetActiveItem ? <Form isAddedToCollection={isAddedToCollection}/> : ''}\n      </div>\n    );\n  }\n}\n\nexport default Collection;","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\nimport { updateItem, deleteItem } from '../../utils/storage';\n\nimport Collection from './Collection';\n\nconst mapStateToProps = state => ({\n  isSetActiveItem: !!state.item.activeItem.item,\n  items: state.item.itemsList.items\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectItem: (item) => {\n    dispatch(itemActions.setActiveItemAction(item));\n  },\n  updateItem: (item) => {\n    updateItem(item);\n    dispatch(itemActions.updateSingleItemAction(item));\n  },\n  deleteItem: (item) => {\n    deleteItem(item.nasaId);\n    dispatch(itemActions.deleteSingleItemAction(item.nasaId));\n  }\n});\n\nconst CollectionContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Collection);\n\nexport default CollectionContainer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Button from '../../components/Button';\nimport CollectionContainer from '../../components/Collection';\n\nimport './CollectionPage.scss';\n\nexport class CollectionPage extends Component {\n  componentWillMount() {\n    this.props.fetchItems();\n  }\n\n  componentWillUnmount() {\n    this.props.resetItems();\n  }\n\n  render() {\n    const { totalResult, loading } = this.props;\n\n    return (\n      <div className=\"collection-page\">\n        <div className=\"collection-page__header\">\n          <div className=\"collection-page__header__title\">\n            <label>NASA Collection</label>\n          </div>\n          <div className=\"collection-page__header__actions\">\n            <Link to=\"/nasa-search\">\n              <Button>\n                <FontAwesomeIcon icon={faPlus} /> Add new item\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"collection-page__body\">\n          {\n            !totalResult && !loading ? (\n              <div className=\"collection-page__body__nothing\">\n                <div>There are no items in NASA Collection.</div>\n                <div>Click \"Add new item\" to search.</div>\n              </div>\n            ) : ''\n          }\n          <CollectionContainer isAddedToCollection={true} />\n        </div>\n      </div>\n    )\n  }\n};","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\n\nimport { CollectionPage } from './CollectionPage';\n\nconst mapStateToProps = state => ({\n  totalResult: state.item.itemsList.totalResult,\n  loading: state.item.itemsList.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: () => {\n    dispatch(itemActions.fetchItemsStorageAction());\n  },\n  resetItems: () => {\n    dispatch(itemActions.resetItemsAction());\n  }\n});\n\nconst CollectionPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CollectionPage);\n\nexport default CollectionPageContainer;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  static defaultProps = {\n    bsPrefix: 'input'\n  };\n\n  render() {\n    const {\n      bsPrefix,\n      className,\n      size,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      bsPrefix,\n      className,\n      'form-control',\n      size && `form-control--${size}`\n    );\n\n    const Component = 'input';\n\n    return (\n      <Component\n        {...props}\n        className={classes}\n      />\n    );\n  }\n}\n\nexport default Input;","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Textarea extends PureComponent {\n  static propTypes = {\n    bsPrefix: PropTypes.string,\n    value: PropTypes.string,\n    onKeyPress: PropTypes.func,\n    size: PropTypes.string,\n    id: PropTypes.string\n  };\n\n  static defaultProps = {\n    bsPrefix: 'textarea'\n  };\n\n  render() {\n    const {\n      id,\n      bsPrefix,\n      className,\n      size,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      bsPrefix,\n      className,\n      'form-control',\n      size && `form-control--${size}`\n    );\n\n    const Component = 'textarea';\n\n    return (\n      <Component\n        {...props}\n        id={id}\n        className={classes}\n      />\n    );\n  }\n}\n\nexport default Textarea;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport CollectionContainer from '../../components/Collection';\nimport { Input } from '../../components/FormControl';\n\nimport './SearchPage.scss';\n\nexport class SearchPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      queryString: null,\n    };\n  }\n\n  search(event) {\n    if (event.key === 'Enter') {\n      this.setState({queryString: event.target.value}, () => {\n        this.props.fetchItems(this.state.queryString);\n      });\n    }\n  }\n\n  render() {\n    const { queryString } = this.state;\n    const { totalResult, loading } = this.props;\n\n    return (\n      <div className=\"search-page\">\n        <div className=\"search-page__header\">\n          <div className=\"search-page__header__actions\">\n            <Link to=\"/\" className=\"text--small\">\n              <FontAwesomeIcon icon={faAngleLeft} /> Back to Collection\n            </Link>\n          </div>\n          <div className=\"search-page__header__title\">\n            <label>Search from Nasa</label>\n          </div>\n          <div className=\"search-page__header__input\">\n            <Input\n              type=\"text\"\n              placeholder=\"Type something then Enter to search...\"\n              onKeyPress={(event) => this.search(event)}\n            />\n          </div>\n        </div>\n        <div className=\"search-page__body\">\n          {\n            totalResult !== null ? (\n              <div className=\"search-page__body__total-hits\">\n                <span>{ totalResult } result for \"{ queryString }\"</span>\n              </div>\n            ) : ''\n          }\n          {\n            loading ? (\n              <div className=\"search-page__body__loading\">\n                <div>Loading</div>\n              </div>\n            ) : ''\n          }\n          <CollectionContainer isAddedToCollection={false} />\n        </div>\n      </div>\n    )\n  }\n};","import { connect } from 'react-redux';\nimport { itemActions } from '../../data/actions';\n\nimport { SearchPage } from './SearchPage';\n\nconst mapStateToProps = state => ({\n  totalResult: state.item.itemsList.totalResult,\n  loading: state.item.itemsList.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: (queryString) => {\n    dispatch(itemActions.fetchItemsAction(queryString));\n  },\n  resetItems: () => {\n    dispatch(itemActions.resetItemsAction());\n  }\n});\n\nconst SearchPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchPage);\n\nexport default SearchPageContainer;","import React, { Component } from 'react';\n\nexport const EditPage = ({ match }) => <h2>{match.params.nasaId}</h2>;","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './VideoPage.scss';\n\nexport class VideoPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoUrl: null\n    };\n\n    const { nasaId } = props.match.params;\n    fetch(`https://images-api.nasa.gov/asset/${nasaId}`)\n      .then(response => response.json())\n      .then(data => this.setState({videoUrl: data.collection.items[0].href}));\n  }\n\n  render() {\n    const { videoUrl } = this.state;\n    const { goBack } = this.props.history;\n\n    return (\n      <div className=\"video-page\">\n        <div className=\"video-page__header\">\n          <div className=\"video-page__header__title\">\n            <label>NASA video</label>\n          </div>\n          <div className=\"video-page__header__actions\">\n          <span onClick={goBack} className=\"color--white\">\n            <FontAwesomeIcon icon={faTimes} />\n          </span>\n          </div>\n        </div>\n        <div className=\"video-page__body\">\n          <ReactPlayer\n              url={videoUrl}\n              controls\n              width=\"100%\" height=\"100%\"\n              />\n        </div>\n      </div>\n    )\n  }\n};","import { itemActionTypes } from '../actionTypes';\n\nconst INITIAL_STATE = {\n  itemsList: { items: [], totalResult: null, error: null, loading: false },\n  activeItem: { item: null },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  let error;\n  switch (action.type) {\n    case itemActionTypes.FETCH_ITEMS:\n    case itemActionTypes.FETCH_ITEMS_STORAGE:\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error: null, loading: true }\n      };\n    case itemActionTypes.FETCH_ITEMS_SUCCESS:\n    case itemActionTypes.FETCH_ITEMS_STORAGE_SUCCESS:\n      return {\n        ...state,\n        itemsList: { ...action.payload, error: null, loading: false }\n      };\n    case itemActionTypes.FETCH_ITEMS_FAILURE:\n    case itemActionTypes.FETCH_ITEMS_STORAGE_FAILURE:\n      error = action.payload || { message: action.payload.message };\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error, loading: false }\n      };\n    case itemActionTypes.RESET_ITEMS:\n      return {\n        ...state,\n        itemsList: { items: [], totalResult: null, error: null, loading: false }\n      };\n\n    case itemActionTypes.SET_ACTIVE_ITEM:\n      return {\n        ...state,\n        activeItem: { item: action.payload }\n      };\n    case itemActionTypes.RESET_ACTIVE_ITEM:\n      return {\n        ...state,\n        activeItem: { item: null }\n      };\n\n    case itemActionTypes.UPDATE_ITEMS:\n      return {\n        ...state,\n        itemsList: {\n          ...state.itemsList,\n          items: !!state.itemsList.items && state.itemsList.items\n            .map(item => {\n              const updatedItem = action.payload.find(\n                updatedData => encodeURI(item.nasaId) === updatedData.nasaId\n              );\n              if (!!updatedItem) {\n                return { ...item, ...updatedItem, nasaId: item.nasaId }\n              }\n              return item\n            })\n        }\n      };\n\n    case itemActionTypes.UPDATE_SINGLE_ITEM:\n      return {\n        ...state,\n        itemsList: {\n          ...state.itemsList,\n          items: !!state.itemsList.items && state.itemsList.items\n            .map(item => {\n              if (item.nasaId === action.payload.nasaId) {\n                return { ...item, ...action.payload }\n              }\n              return item\n            })\n        }\n      };\n\n    case itemActionTypes.DELETE_SINGLE_ITEM:\n      return {\n        ...state,\n        itemsList: {\n          ...state.itemsList,\n          items: !!state.itemsList.items && state.itemsList.items\n            .filter(item => item.nasaId !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n  form: formReducer,\n  item: itemReducer,\n});\n","function parseItem(item) {\n  let parsedData;\n  if (item.data && item.data.length) {\n    parsedData = {\n      nasaId: item.data[0].nasa_id,\n      title: item.data[0].title,\n      description: item.data[0].description,\n      creator: item.data[0].center,\n      dateCreated: item.data[0].date_created,\n      type: item.data[0].media_type,\n    };\n  } else {\n    parsedData = {\n      nasaId: null,\n      title: null,\n      description: null,\n      creator: null,\n      dateCreated: null,\n      imageUrl: null,\n      type: null,\n    }\n  }\n\n  let imageUrl;\n  if (item.links && item.links.length && parsedData.type === 'image') {\n    let image = item.links\n      .find(link => link.render === 'image');\n    imageUrl = !!image ? image.href : null;\n  }\n\n  return {\n    ...parsedData,\n    imageUrl\n  };\n}\n\nfunction search(queryString) {\n  return fetch(`https://images-api.nasa.gov/search?q=${queryString}&media_type=video`)\n    .then(response => response.json())\n    .then(response => {\n      return {\n        links: response.collection.links,\n        metadata: response.collection.metadata,\n        items: response.collection.items.map(item => parseItem(item)),\n      };\n    });\n}\n\nfunction getAssets(nasaId) {\n  return fetch(`https://images-api.nasa.gov/asset/${nasaId}`)\n    .then(response => response.json());\n}\n\nexport {\n  search,\n  getAssets\n};","import { combineEpics, ofType } from 'redux-observable';\nimport { of, from } from 'rxjs';\nimport { map, flatMap, catchError } from 'rxjs/operators';\n\nimport { itemActionTypes } from '../actionTypes';\nimport { itemActions } from '../actions';\n\nimport { search, getAssets } from '../../utils/nasaApi';\nimport { findMP4Url, findPNGUrl } from '../../utils/common';\nimport { getItems } from '../../utils/storage';\n\nconst fetchItemsEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS),\n  flatMap(action => from(search(action.payload)).pipe(\n    map((collection) => {\n      let items = collection.items;\n      let totalResult = collection.metadata.total_hits;\n      return itemActions.fetchItemsSuccessAction(items, totalResult);\n    }),\n    catchError(error => of(itemActions.fetchItemsFailureAction(error)))\n  ))\n);\n\nconst fetchItemsStorageEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS_STORAGE),\n  flatMap(() => of(getItems()).pipe(\n    map((items) => {\n      return itemActions.fetchItemsStorageSuccessAction(items);\n    }),\n    catchError(error => of(itemActions.fetchItemsStorageFailureAction(error)))\n  ))\n);\n\nconst getItemAssetsEpic = action$ => action$.pipe(\n  ofType(itemActionTypes.FETCH_ITEMS_SUCCESS),\n  flatMap(action => from(Promise.all(action.payload.items.map(item => getAssets(item.nasaId)))).pipe(\n    map((collections) => {\n      let updatedItems = collections.map(collection => ({\n        nasaId: collection.collection && collection.collection.href.split('https://images-api.nasa.gov/asset/')[1] || null,\n        videoUrl: collection.collection && findMP4Url(collection.collection.items),\n        imageUrl: collection.collection && findPNGUrl(collection.collection.items) || 'https://dumielauxepices.net/sites/default/files/black-860221-5629409.jpg'\n      }))\n      return itemActions.updateItemsAction(updatedItems);\n    }),\n    catchError(error => of(itemActions.updateItemsFailureAction(error)))\n  ))\n);\n\nexport default combineEpics(\n  fetchItemsEpic,\n  fetchItemsStorageEpic,\n  getItemAssetsEpic\n);","function findPNGUrl(items) {\n  let image = items.find(item => item.href.endsWith('~small_thumb_00003.png'))\n  return !!image ? image.href : null;\n}\n\nfunction findMP4Url(items) {\n  let video = items.find(item => item.href.endsWith('~small.mp4'))\n  return !!video ? video.href : null;\n}\n\nexport {\n  findPNGUrl,\n  findMP4Url\n};","import { combineEpics } from 'redux-observable';\n\nimport itemEpics from './itemEpics';\n\nexport default combineEpics(\n  itemEpics\n);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { CollectionPage, SearchPage, EditPage, VideoPage } from './app/pages';\nimport makeStore from './app/data';\n\nimport './app/styles/style.scss';\n\nconst store = makeStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={CollectionPage} />\n            <Route path=\"/nasa-search\" component={SearchPage} />\n            <Route path=\"/video/:nasaId\" component={VideoPage} />\n              <Route path=\"/edit/:nasaId\" component={EditPage} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport allReducers from './reducers';\nimport rootEpic from './epics';\n\nexport default function configureStore(initialState) {\n  const epicMiddleware = createEpicMiddleware();\n  const reduxMiddleware = composeWithDevTools(\n    applyMiddleware(epicMiddleware)\n  );\n\n  const store = createStore(allReducers, initialState, reduxMiddleware);\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint operator-linebreak: [\"error\", \"after\"] */\n/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint no-console: [\"error\", { allow: [\"log\", \"error\"] }] */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}